[
  {
    "name": "outdoorly",
    "sub": "fullstack national parks website",
    "description": [
      "created a fully responsive React.js application allowing users to submit search queries, browse and upload reviews on National Parks.",
      "utilized Amazon Web Servicesâ€™ S3 for cloud storage and retrieval of user-submitted park images.",
      "applied the OAuth 2.0 protocol for authentication to leverage Google Cloud, allowing authorization of Google account connection with OutDoorly to maintain secure user information.",
      "designed a data model with Mongoose for park and user information to be stored on a MongoDB database accessible through a RESTful Node.js backend."
    ],
    "tech": [
      "logos:react",
      "logos:redux",
      "devicon:materialui",
      "logos:sass",
      "vscode-icons:file-type-node",
      "simple-icons:express",
      "devicon:mongodb-wordmark",
      "logos:aws",
      "skill-icons:gcp-dark"
    ]
  },
  {
    "name": "playify",
    "sub": "spotify playlist generator",
    "description": [
      "designed a responsive frontend in React.js with React Bootstrap allowing for submission of artists by a user.",
      "utilizes OAUTH 2.0 protocol alongside RESTful Spotify API to allow users to securely connect their Spotify accounts to Playify.",
      "constructed a secure backend built on Node.js with Express that retrieves submitted artist's songs through GET requests.",
      "dynamically named playlist allows connected users to customize their generated playlist, visible through PUT requests."
    ],
    "tech": [
      "logos:react",
      "vscode-icons:file-type-node",
      "simple-icons:express",
      "logos:bootstrap"
    ]
  },
  {
    "name": "insightubc",
    "sub": "ubc course database application",
    "description": [
      "fullstack application allowing users to query databases containing UBC course information built on TypeScript and Node.",
      "designed and implemented a robust frontend built on React with Bootstrap",
      "developed with Test Driven Design using Mocha and Chai to develop a test suite achieving 100% code coverage.",
      "utilized the Agile/Scrum process for efficient project delivery and to meet deadlines.",
      "implemented a robust backend which parses user queries on UBC courses which produces filtered results that match given criteria.",
      "enforced linting standards using ESLint to ensure understandable code."
    ],
    "tech": [
      "logos:react",
      "logos:bootstrap",
      "vscode-icons:file-type-node",
      "simple-icons:express",
      "logos:typescript-icon",
      "logos:mocha",
      "logos:chai"
    ]
  },
  {
    "name": "studyspot",
    "sub": "ubc study spaces application",
    "description": [
      "constructed a UBC study space website using React.js for nwHacks 2023 allowing users to browse, and add reviews for campus spaces.",
      "implemented a backend on Node.js and a database with MongoDB Atlas allowing persistence of ratings and reviews on UBC spaces.",
      "incorporated a searchbar using React hooks for searching and selecting of spaces with suggestions.",
      "designed a frontend through React Bootstrap allowing for adding and viewing of the existing reviews of spaces around campus stored in created database."
    ],
    "tech": [
      "logos:react",
      "logos:bootstrap",
      "vscode-icons:file-type-node",
      "simple-icons:express",
      "devicon:mongodb-wordmark"
    ]
  },
  {
    "name": "personal website",
    "sub": "react website",
    "description": [
      "designed a personal website with multiple components using React.js.",
      "implemented various scroll effect animations and a responsive particle background.",
      "used React hooks to implement timed fade animations and a disappearing navigation bar."
    ],
    "tech": ["logos:react", "logos:css-3", "logos:html-5", "logos:javascript"]
  },
  {
    "name": "quickcards",
    "sub": "java swing flashcard app",
    "description": [
      "constructed a GUI Based flashcard app on Java Swing where users can edit, remove and add flashcards.",
      "utilized JUnit 5 alongside TDD to implement a cohesive test suite.",
      "followed OOP principles and other design principles to ensure no coupling and cohesion within the project."
    ],
    "tech": ["logos:java", "devicon:junit-wordmark"]
  }
]
